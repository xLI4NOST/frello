{"ast":null,"code":"var _jsxFileName = \"/Users/li4nost/dev/frello/src/components/cardForm/cardForm.jsx\";\nimport classes from './cardForm.module.sass';\nimport { useFormik, Formik, Field, Form, yupToFormErrors } from \"formik\";\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardForm = () => {\n  const validShema = yup.object().shape({\n    text: yup.string().min(2, 'Минимум 2 символа').required('Обязательно')\n  });\n  return (\n    /*#__PURE__*/\n    // <form className={classes.formCard} onSubmit={formik.handleSubmit}>\n    //     <h2>Create card</h2>\n    //     <input type=\"text\" name='text' onChange={formik.handleChange} value={formik.values.text}/>\n    // <button type=\"submit\">PUSH</button>\n    // </form>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          text: ''\n        },\n        validationSchema: validShema,\n        onSubmit: values => console.log(values),\n        children: _ref => {\n          let {\n            errors,\n            touched\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"text\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 21\n            }, this), errors.text && touched.text ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errors.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 53\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"PUSH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 42\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = CardForm;\nexport default CardForm;\nvar _c;\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"names":["classes","useFormik","Formik","Field","Form","yupToFormErrors","yup","jsxDEV","_jsxDEV","CardForm","validShema","object","shape","text","string","min","required","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","values","console","log","_ref","errors","touched","name","type","_c","$RefreshReg$"],"sources":["/Users/li4nost/dev/frello/src/components/cardForm/cardForm.jsx"],"sourcesContent":["import classes from './cardForm.module.sass'\nimport {useFormik, Formik, Field, Form, yupToFormErrors} from \"formik\";\nimport * as yup from 'yup'\n\nconst CardForm = () => {\n    const validShema = yup.object().shape({\n        text: yup.string().min(2, 'Минимум 2 символа').required('Обязательно')\n    })\n\n    return (// <form className={classes.formCard} onSubmit={formik.handleSubmit}>\n        //     <h2>Create card</h2>\n        //     <input type=\"text\" name='text' onChange={formik.handleChange} value={formik.values.text}/>\n        // <button type=\"submit\">PUSH</button>\n        // </form>\n\n        <div>\n            <h2>Create card</h2>\n            <Formik initialValues={{\n                text: '',\n            }}\n                    validationSchema={validShema}\n                    onSubmit={values => console.log(values)}>\n\n                {({errors, touched}) => (<Form>\n                    <Field name=\"text\" type='text'></Field>\n                    {errors.text && touched.text ? (<div>{errors.text}</div>) : null}\n                    <button type=\"submit\">PUSH</button>\n                </Form>)}\n            </Formik>\n        </div>\n    )\n}\n\nexport default CardForm"],"mappings":";AAAA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C,SAAQC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,eAAe,QAAO,QAAQ;AACtE,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,UAAU,GAAGJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAClCC,IAAI,EAAEP,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAACC,QAAQ,CAAC,aAAa;EACzE,CAAC,CAAC;EAEF;IAAA;IAAQ;IACJ;IACA;IACA;IACA;IAEAR,OAAA;MAAAS,QAAA,gBACIT,OAAA;QAAAS,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBb,OAAA,CAACN,MAAM;QAACoB,aAAa,EAAE;UACnBT,IAAI,EAAE;QACV,CAAE;QACMU,gBAAgB,EAAEb,UAAW;QAC7Bc,QAAQ,EAAEC,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAE;QAAAR,QAAA,EAE3CW,IAAA;UAAA,IAAC;YAACC,MAAM;YAAEC;UAAO,CAAC,GAAAF,IAAA;UAAA,oBAAMpB,OAAA,CAACJ,IAAI;YAAAa,QAAA,gBAC1BT,OAAA,CAACL,KAAK;cAAC4B,IAAI,EAAC,MAAM;cAACC,IAAI,EAAC;YAAM;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACtCQ,MAAM,CAAChB,IAAI,IAAIiB,OAAO,CAACjB,IAAI,gBAAIL,OAAA;cAAAS,QAAA,EAAMY,MAAM,CAAChB;YAAI;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,GAAI,IAAI,eAChEb,OAAA;cAAQwB,IAAI,EAAC,QAAQ;cAAAf,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC;QAAA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;AAEd,CAAC;AAAAY,EAAA,GA3BKxB,QAAQ;AA6Bd,eAAeA,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}