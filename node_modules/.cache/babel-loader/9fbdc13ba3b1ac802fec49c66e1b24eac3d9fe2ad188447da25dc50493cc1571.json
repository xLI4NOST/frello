{"ast":null,"code":"var _jsxFileName = \"/Users/li4nost/dev/frello/src/components/cardForm/cardForm.jsx\";\nimport classes from './cardForm.module.sass';\nimport { useFormik, Formik, Field, Form } from \"formik\";\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardForm = () => {\n  const validShema = yup.object().shape({\n    text: yup.string().min(2, 'Минимум 2 символа').required('Обязательно')\n  });\n  // const formik = useFormik({\n  //     initialValues: {\n  //         text:'',\n  //     },\n  //     onSubmit: values => {\n  //         console.log(values, null, 2)\n  //     },\n  // }\n  // );\n\n  return (\n    /*#__PURE__*/\n    // <form className={classes.formCard} onSubmit={formik.handleSubmit}>\n    //     <h2>Create card</h2>\n    //     <input type=\"text\" name='text' onChange={formik.handleChange} value={formik.values.text}/>\n    // <button type=\"submit\">PUSH</button>\n    // </form>\n    _jsxDEV(Formik, {\n      initialValues: {\n        text: ''\n      },\n      onSubmit: values => console.log(values),\n      children: _ref => {\n        let {\n          errors,\n          touched,\n          isValidating\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"text\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"PUSH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = CardForm;\nexport default CardForm;\nvar _c;\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"names":["classes","useFormik","Formik","Field","Form","yup","jsxDEV","_jsxDEV","CardForm","validShema","object","shape","text","string","min","required","initialValues","onSubmit","values","console","log","children","_ref","errors","touched","isValidating","fileName","_jsxFileName","lineNumber","columnNumber","name","type","_c","$RefreshReg$"],"sources":["/Users/li4nost/dev/frello/src/components/cardForm/cardForm.jsx"],"sourcesContent":["import classes from './cardForm.module.sass'\nimport {useFormik, Formik, Field, Form} from \"formik\";\nimport * as yup from 'yup'\n\nconst CardForm = () => {\n    const validShema = yup.object().shape({\n        text: yup.string().min(2, 'Минимум 2 символа').required('Обязательно')\n    })\n    // const formik = useFormik({\n    //     initialValues: {\n    //         text:'',\n    //     },\n    //     onSubmit: values => {\n    //         console.log(values, null, 2)\n    //     },\n    // }\n    // );\n\n\n    return (\n        // <form className={classes.formCard} onSubmit={formik.handleSubmit}>\n        //     <h2>Create card</h2>\n        //     <input type=\"text\" name='text' onChange={formik.handleChange} value={formik.values.text}/>\n        // <button type=\"submit\">PUSH</button>\n        // </form>\n        <Formik initialValues={{\n            text:'',\n\n        }} onSubmit={\n            values => console.log(values)\n        }>\n            {({ errors, touched, isValidating })=>(\n                <Form>\n                    <h2>Create card</h2>\n                    <Field name=\"text\" type='text'></Field>\n                    <button type=\"submit\">PUSH</button>\n                </Form>\n                )}\n        </Formik>\n    )\n\n}\n\nexport default CardForm"],"mappings":";AAAA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C,SAAQC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAO,QAAQ;AACrD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,UAAU,GAAGJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAClCC,IAAI,EAAEP,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAACC,QAAQ,CAAC,aAAa;EACzE,CAAC,CAAC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;IAAA;IACI;IACA;IACA;IACA;IACA;IACAR,OAAA,CAACL,MAAM;MAACc,aAAa,EAAE;QACnBJ,IAAI,EAAC;MAET,CAAE;MAACK,QAAQ,EACPC,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAC/B;MAAAG,QAAA,EACIC,IAAA;QAAA,IAAC;UAAEC,MAAM;UAAEC,OAAO;UAAEC;QAAa,CAAC,GAAAH,IAAA;QAAA,oBAC/Bf,OAAA,CAACH,IAAI;UAAAiB,QAAA,gBACDd,OAAA;YAAAc,QAAA,EAAI;UAAW;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBtB,OAAA,CAACJ,KAAK;YAAC2B,IAAI,EAAC,MAAM;YAACC,IAAI,EAAC;UAAM;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvCtB,OAAA;YAAQwB,IAAI,EAAC,QAAQ;YAAAV,QAAA,EAAC;UAAI;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;AAGjB,CAAC;AAAAG,EAAA,GArCKxB,QAAQ;AAuCd,eAAeA,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}