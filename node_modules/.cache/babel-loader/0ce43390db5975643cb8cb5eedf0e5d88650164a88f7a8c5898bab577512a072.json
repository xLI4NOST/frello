{"ast":null,"code":"var _jsxFileName = \"/Users/li4nost/dev/frello/src/components/cardForm/cardForm.jsx\";\nimport classes from './cardForm.module.sass';\nimport { useFormik, Formik, Field, Form, yupToFormErrors } from \"formik\";\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardForm = () => {\n  const validShema = yup.object().shape({\n    text: yup.string().min(2, 'Минимум 2 символа').required('Обязательно')\n  });\n  return (\n    /*#__PURE__*/\n    // <form className={classes.formCard} onSubmit={formik.handleSubmit}>\n    //     <h2>Create card</h2>\n    //     <input type=\"text\" name='text' onChange={formik.handleChange} value={formik.values.text}/>\n    // <button type=\"submit\">PUSH</button>\n    // </form>\n    _jsxDEV(Formik, {\n      initialValues: {\n        text: ''\n      },\n      validationSchema: validShema,\n      onSubmit: values => console.log(values),\n      children: _ref => {\n        let {\n          errors,\n          touched\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"text\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this), errors.text && touched.text ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 53\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"PUSH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 38\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = CardForm;\nexport default CardForm;\nvar _c;\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"names":["classes","useFormik","Formik","Field","Form","yupToFormErrors","yup","jsxDEV","_jsxDEV","CardForm","validShema","object","shape","text","string","min","required","initialValues","validationSchema","onSubmit","values","console","log","children","_ref","errors","touched","fileName","_jsxFileName","lineNumber","columnNumber","name","type","_c","$RefreshReg$"],"sources":["/Users/li4nost/dev/frello/src/components/cardForm/cardForm.jsx"],"sourcesContent":["import classes from './cardForm.module.sass'\nimport {useFormik, Formik, Field, Form, yupToFormErrors} from \"formik\";\nimport * as yup from 'yup'\n\nconst CardForm = () => {\n    const validShema = yup.object().shape({\n        text: yup.string().min(2, 'Минимум 2 символа').required('Обязательно')\n    })\n\n    return (// <form className={classes.formCard} onSubmit={formik.handleSubmit}>\n        //     <h2>Create card</h2>\n        //     <input type=\"text\" name='text' onChange={formik.handleChange} value={formik.values.text}/>\n        // <button type=\"submit\">PUSH</button>\n        // </form>\n        <Formik initialValues={{\n            text: '',\n        }}\n                validationSchema={validShema}\n                onSubmit={values => console.log(values)}>\n\n            {({errors, touched}) => (<Form>\n                    <h2>Create card</h2>\n                    <Field name=\"text\" type='text'></Field>\n                    {errors.text && touched.text ? (<div>{errors.text}</div>) : null}\n                    <button type=\"submit\">PUSH</button>\n                </Form>)}\n        </Formik>)\n\n}\n\nexport default CardForm"],"mappings":";AAAA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C,SAAQC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,eAAe,QAAO,QAAQ;AACtE,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,UAAU,GAAGJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAClCC,IAAI,EAAEP,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAACC,QAAQ,CAAC,aAAa;EACzE,CAAC,CAAC;EAEF;IAAA;IAAQ;IACJ;IACA;IACA;IACA;IACAR,OAAA,CAACN,MAAM;MAACe,aAAa,EAAE;QACnBJ,IAAI,EAAE;MACV,CAAE;MACMK,gBAAgB,EAAER,UAAW;MAC7BS,QAAQ,EAAEC,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAE;MAAAG,QAAA,EAE3CC,IAAA;QAAA,IAAC;UAACC,MAAM;UAAEC;QAAO,CAAC,GAAAF,IAAA;QAAA,oBAAMhB,OAAA,CAACJ,IAAI;UAAAmB,QAAA,gBACtBf,OAAA;YAAAe,QAAA,EAAI;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBtB,OAAA,CAACL,KAAK;YAAC4B,IAAI,EAAC,MAAM;YAACC,IAAI,EAAC;UAAM;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACtCL,MAAM,CAACZ,IAAI,IAAIa,OAAO,CAACb,IAAI,gBAAIL,OAAA;YAAAe,QAAA,EAAME,MAAM,CAACZ;UAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,GAAI,IAAI,eAChEtB,OAAA;YAAQwB,IAAI,EAAC,QAAQ;YAAAT,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;AAEjB,CAAC;AAAAG,EAAA,GAxBKxB,QAAQ;AA0Bd,eAAeA,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}