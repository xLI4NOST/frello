{"ast":null,"code":"var _jsxFileName = \"/Users/li4nost/dev/frello/src/components/cardForm/cardForm.jsx\";\nimport classes from './cardForm.module.sass';\nimport { useFormik, Formik, Field, Form, yupToFormErrors } from \"formik\";\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardForm = () => {\n  const validShema = yup.object().shape({\n    text: yup.string().min(2, 'Минимум 2 символа').required('Обязательное поле')\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.formCard,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        text: ''\n      },\n      validationSchema: validShema,\n      onSubmit: values => console.log(values),\n      children: _ref => {\n        let {\n          errors,\n          touched,\n          valid\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"text\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this), errors.text && touched.text ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 53\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: errors.text ? true : '',\n            type: \"submit\",\n            children: \"PUSH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 49\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = CardForm;\nexport default CardForm;\nvar _c;\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"names":["classes","useFormik","Formik","Field","Form","yupToFormErrors","yup","jsxDEV","_jsxDEV","CardForm","validShema","object","shape","text","string","min","required","className","formCard","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","values","console","log","_ref","errors","touched","valid","name","type","disabled","_c","$RefreshReg$"],"sources":["/Users/li4nost/dev/frello/src/components/cardForm/cardForm.jsx"],"sourcesContent":["import classes from './cardForm.module.sass'\nimport {useFormik, Formik, Field, Form, yupToFormErrors} from \"formik\";\nimport * as yup from 'yup'\n\nconst CardForm = () => {\n    const validShema = yup.object().shape({\n        text: yup.string().min(2, 'Минимум 2 символа').required('Обязательное поле')\n    })\n\n    return (\n        <div className={classes.formCard}>\n            <h2>Create card</h2>\n            <Formik initialValues={{\n                text: '',\n            }}\n                    validationSchema={validShema}\n                    onSubmit={values => console.log(values)}>\n\n                {({errors, touched, valid}) => (<Form>\n                    <Field name=\"text\" type='text'></Field>\n                    {errors.text && touched.text ? (<p>{errors.text}</p>) : null}\n                    <button disabled={errors.text ? true :  ''} type=\"submit\">PUSH</button>\n                </Form>)}\n            </Formik>\n        </div>\n    )\n}\n\nexport default CardForm"],"mappings":";AAAA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C,SAAQC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,eAAe,QAAO,QAAQ;AACtE,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,MAAMC,UAAU,GAAGJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAClCC,IAAI,EAAEP,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAACC,QAAQ,CAAC,mBAAmB;EAC/E,CAAC,CAAC;EAEF,oBACIR,OAAA;IAAKS,SAAS,EAAEjB,OAAO,CAACkB,QAAS;IAAAC,QAAA,gBAC7BX,OAAA;MAAAW,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBf,OAAA,CAACN,MAAM;MAACsB,aAAa,EAAE;QACnBX,IAAI,EAAE;MACV,CAAE;MACMY,gBAAgB,EAAEf,UAAW;MAC7BgB,QAAQ,EAAEC,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAE;MAAAR,QAAA,EAE3CW,IAAA;QAAA,IAAC;UAACC,MAAM;UAAEC,OAAO;UAAEC;QAAK,CAAC,GAAAH,IAAA;QAAA,oBAAMtB,OAAA,CAACJ,IAAI;UAAAe,QAAA,gBACjCX,OAAA,CAACL,KAAK;YAAC+B,IAAI,EAAC,MAAM;YAACC,IAAI,EAAC;UAAM;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACtCQ,MAAM,CAAClB,IAAI,IAAImB,OAAO,CAACnB,IAAI,gBAAIL,OAAA;YAAAW,QAAA,EAAIY,MAAM,CAAClB;UAAI;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,GAAI,IAAI,eAC5Df,OAAA;YAAQ4B,QAAQ,EAAEL,MAAM,CAAClB,IAAI,GAAG,IAAI,GAAI,EAAG;YAACsB,IAAI,EAAC,QAAQ;YAAAhB,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC;MAAA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAAc,EAAA,GAtBK5B,QAAQ;AAwBd,eAAeA,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}